version: "3.9"

services:
  postgres:
    build:
      context: ..
      dockerfile: docker/postgres.Dockerfile
    container_name: godlevel-postgres
    environment:
      POSTGRES_DB: challenge_db
      POSTGRES_USER: challenge
      POSTGRES_PASSWORD: challenge_2024
    ports:
      - "15432:5432"
    volumes:
      - postgres-data:/var/lib/postgresql/data
      - ../infra/sql/database-schema.sql:/docker-entrypoint-initdb.d/01-schema.sql:ro
      - ./postgresql.conf:/etc/postgresql/postgresql.conf:ro
    command: ["postgres", "-c", "config_file=/etc/postgresql/postgresql.conf"]
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U challenge -d challenge_db"]
      interval: 5s
      timeout: 5s
      retries: 5

  data-generator:
    build:
      context: ..
      dockerfile: docker/data-generator.Dockerfile
    container_name: godlevel-data-gen
    depends_on:
      postgres:
        condition: service_healthy
    environment:
      DATABASE_URL: postgresql://challenge:challenge_2024@postgres:5432/challenge_db
    command: >
      sh -c "
        echo 'Waiting for database to be ready...' &&
        sleep 5 &&
        echo 'Generating challenge data...' &&
        python generate_data.py --db-url postgresql://challenge:challenge_2024@postgres:5432/challenge_db
      "
    profiles:
      - tools

  cube:
    image: cubejs/cube:latest
    container_name: godlevel-cube
    environment:
      CUBEJS_DB_TYPE: postgres
      CUBEJS_DB_HOST: postgres
      CUBEJS_DB_NAME: challenge_db
      CUBEJS_DB_USER: challenge
      CUBEJS_DB_PASS: challenge_2024
      CUBEJS_API_SECRET: gLzCoo4yNXxwbaJqNPsqjaYQdpRLQx9Y8Hk1WHymgkM
      CUBEJS_CACHE_AND_QUEUE_DRIVER: cubestore
      CUBEJS_CUBESTORE_HOST: cubestore
      CUBEJS_CUBESTORE_PORT: 9999
    ports:
      - "4000:4000"
    depends_on:
      - postgres
      - cubestore
    volumes:
      - ../cube:/cube/conf

  cubestore:
    image: cubejs/cubestore:latest
    container_name: godlevel-cubestore
    environment:
      CUBESTORE_DATA_DIR: /var/lib/cubestore
      CUBESTORE_WORKERS: cubestore:10000
      CUBESTORE_META_PORT: 9999
      CUBESTORE_WORKER_PORT: 10000
      CUBESTORE_SERVER_NAME: cubestore
    volumes:
      - cubestore-data:/var/lib/cubestore
    healthcheck:
      test: ["CMD-SHELL", "nc -z localhost 9999"]
      interval: 5s
      timeout: 5s
      retries: 10

  api:
    build:
      context: ..
      dockerfile: docker/api.Dockerfile
    container_name: godlevel-api
    environment:
      DATABASE_URL: postgresql+psycopg://challenge:challenge_2024@postgres:5432/challenge_db
      CUBE_API_URL: http://cube:4000/cubejs-api
      CUBE_API_TOKEN: gLzCoo4yNXxwbaJqNPsqjaYQdpRLQx9Y8Hk1WHymgkM
      JWT_SECRET: coloque_um_grande_aqui_____________________________
      JWT_REFRESH_SECRET: outro_grande________________________________
      JWT_SHARE_SECRET: outro_mais___________________________________
      CORS_ORIGINS: http://localhost:3000,http://127.0.0.1:3000
      CACHE_MAX_AGE: "60"
      CACHE_SWR: "300"
      ENV: development
      DEBUG: "True"
    ports:
      - "8000:8000"
    depends_on:
      - postgres
      - cube

volumes:
  postgres-data:
  cubestore-data:
